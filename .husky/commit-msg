#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üìù Validating commit message..."

# Read commit message
commit_message=$(cat $1)

# Check commit message format (Conventional Commits)
if echo "$commit_message" | grep -qE "^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .{1,50}"; then
    echo "‚úÖ Commit message format is valid"
else
    echo "‚ùå Invalid commit message format!"
    echo ""
    echo "Please use Conventional Commits format:"
    echo "  feat: add new feature"
    echo "  fix: fix bug"
    echo "  docs: update documentation"
    echo "  style: formatting changes"
    echo "  refactor: code refactoring"
    echo "  test: add or update tests"
    echo "  chore: maintenance tasks"
    echo "  perf: performance improvements"
    echo "  ci: CI/CD changes"
    echo "  build: build system changes"
    echo ""
    echo "Examples:"
    echo "  feat: add weight tracking functionality"
    echo "  fix: resolve authentication issue"
    echo "  docs: update API documentation"
    echo ""
    exit 1
fi

# Check commit message length
if [ ${#commit_message} -gt 100 ]; then
    echo "‚ö†Ô∏è Commit message is quite long (${#commit_message} chars)"
    echo "Consider keeping it under 100 characters"
fi

echo "‚úÖ Commit message validation completed!"
